// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package caddy

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var ReverseProxyDomainOpts = api.ReqOpts{
	AddEndpoint:         "/caddy/reverse_proxy/add_reverse_proxy",
	GetEndpoint:         "/caddy/reverse_proxy/get_reverse_proxy",
	UpdateEndpoint:      "/caddy/reverse_proxy/set_reverse_proxy",
	DeleteEndpoint:      "/caddy/reverse_proxy/del_reverse_proxy",
	ReconfigureEndpoint: caddyReconfigureEndpoint,
	Monad:               "reverse_proxy",
}

// Data structs

type ReverseProxyDomain struct {
	Name string          `json:"name"`
	Url  string          `json:"url"`
	Role api.SelectedMap `json:"role"`
}

// CRUD operations

func (c *Controller) AddReverseProxyDomain(ctx context.Context, resource *ReverseProxyDomain) (string, error) {
	return api.Add(c.Client(), ctx, ReverseProxyDomainOpts, resource)
}

func (c *Controller) GetReverseProxyDomain(ctx context.Context, id string) (*ReverseProxyDomain, error) {
	return api.Get(c.Client(), ctx, ReverseProxyDomainOpts, &ReverseProxyDomain{}, id)
}

func (c *Controller) UpdateReverseProxyDomain(ctx context.Context, id string, resource *ReverseProxyDomain) error {
	return api.Update(c.Client(), ctx, ReverseProxyDomainOpts, resource, id)
}

func (c *Controller) DeleteReverseProxyDomain(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, ReverseProxyDomainOpts, id)
}
